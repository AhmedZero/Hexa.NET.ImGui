// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Numerics;
using HexaEngine.ImGui;

namespace HexaEngine.ImNodes
{
	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImNodesContext
	{

	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImNodesEditorContext
	{

	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImNodesIO
	{
		public EmulateThreeButtonMouse EmulateThreeButtonMouse;
		public LinkDetachWithModifierClick LinkDetachWithModifierClick;
		public MultipleSelectModifier MultipleSelectModifier;
		public int AltMouseButton;
		public float AutoPanningSpeed;


		public unsafe void Destroy()
		{
			fixed (ImNodesIO* @this = &this)
			{
				ImNodes.Destroy(@this);
			}
		}

	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct EmulateThreeButtonMouse
	{
		public unsafe bool* Modifier;


		public unsafe void Destroy()
		{
			fixed (EmulateThreeButtonMouse* @this = &this)
			{
				ImNodes.Destroy(@this);
			}
		}

	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct LinkDetachWithModifierClick
	{
		public unsafe bool* Modifier;


		public unsafe void Destroy()
		{
			fixed (LinkDetachWithModifierClick* @this = &this)
			{
				ImNodes.Destroy(@this);
			}
		}

	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct MultipleSelectModifier
	{
		public unsafe bool* Modifier;


		public unsafe void Destroy()
		{
			fixed (MultipleSelectModifier* @this = &this)
			{
				ImNodes.Destroy(@this);
			}
		}

	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImNodesStyle
	{
		public float GridSpacing;
		public float NodeCornerRounding;
		public Vector2 NodePadding;
		public float NodeBorderThickness;
		public float LinkThickness;
		public float LinkLineSegmentsPerLength;
		public float LinkHoverDistance;
		public float PinCircleRadius;
		public float PinQuadSideLength;
		public float PinTriangleSideLength;
		public float PinLineThickness;
		public float PinHoverRadius;
		public float PinOffset;
		public Vector2 MiniMapPadding;
		public Vector2 MiniMapOffset;
		public ImNodesStyleFlags Flags;
		public unsafe fixed uint Colors[29];


		public unsafe void Destroy()
		{
			fixed (ImNodesStyle* @this = &this)
			{
				ImNodes.Destroy(@this);
			}
		}

	}

}
